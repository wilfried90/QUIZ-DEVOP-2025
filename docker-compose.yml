networks:
  backend:
    driver: bridge # Isolation du trafic inter-services

volumes:
  pgdata:

services:

  db:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_DB: quiz_database
      POSTGRES_USER: quiz_user
      POSTGRES_PASSWORD: quiz_password
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [backend]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiz_user -d quiz_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file: .env
    command: >
      sh -c "
        python manage.py migrate &&
        poetry run python manage.py runserver 0.0.0.0:8000
      "
    networks: [backend]
    expose:
      - "5000"
    volumes:
      - ./server:/app
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    expose:
      - "3000"
    command: yarn dev --host
    networks: [backend]
    volumes:
      - ./client:/app 
      - /app/nodes_modules
    depends_on:
      - server
    

  nginx:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks: [backend]
    depends_on:
      - frontend
      - server
